@IsTest 
public class supplier_SER_Opty_GenericEmailTest {
    static Integer count = 0;

    // ------------------------- THESE ARE THE MAIN TEST METHODS ------------------------
    // * Add other languages by copying and pasting the English test block below and 
    //   replacing 'US' with the the 2-digit country code

    // English -----------------------------
    @isTest public static void registration_Prospect_US() {
        registration_prospect('US');
    }
    @isTest public static void registration_Prospect_Call2_US() {
        registration_Prospect_Call2('US');
    }
    @isTest public static void registration_In_Progress_US() {
        registration_In_Progress('US');
    }
    @isTest public static void registration_Closed_Lost_Bad_Data_US() {
        registration_Closed_Lost_Bad_Data('US');
    }
    @isTest public static void registration_Closed_Lost_No_Response_US() {
        registration_Closed_Lost_No_Response('US');
    }
    @isTest public static void registration_Closed_Lost_Declined_US() {
        registration_Closed_Lost_Declined('US');
    }
    @isTest public static void registration_Closed_Lost_Not_Working_For_Client_US() {
        registration_Closed_Lost_Not_Working_For_Client('US');
    }
    @isTest public static void registration_Closed_Lost_Escalate_To_Client_US() {
        registration_Closed_Lost_Escalate_To_Client('US');
    }
    @isTest public static void registration_Commit_US() {
        registration_Commit('US');
    }
    @isTest public static void reactivation_Prospect_US() {
        reactivation_Prospect('US');
    }
    @isTest public static void reactivation_In_Progress_US() {
        reactivation_In_Progress('US');
    }
    @isTest public static void reactivation_Closed_Lost_Bad_Data_US() {
        reactivation_Closed_Lost_Bad_Data('US');
    }
    @isTest public static void reactivation_Closed_Lost_No_Response_US() {
        reactivation_Closed_Lost_No_Response('US');
    }
    @isTest public static void reactivation_Closed_Lost_Declined_US() {
        reactivation_Closed_Lost_Declined('US');
    }
    @isTest public static void reactivation_Closed_Lost_Not_Working_For_Client_US() {
        reactivation_Closed_Lost_Not_Working_For_Client('US');
    }
    @isTest public static void reactivation_Closed_Lost_Escalate_To_Client_US() {
        reactivation_Closed_Lost_Escalate_To_Client('US');
    }
    @isTest public static void reactivation_Commit_US() {
        reactivation_Commit('US');
    }

    // Spanish -----------------------------
    @isTest public static void registration_Prospect_MX() {
        registration_prospect('MX');
    }
    @isTest public static void registration_Prospect_Call2_MX() {
        registration_Prospect_Call2('MX');
    }
    @isTest public static void registration_In_Progress_MX() {
        registration_In_Progress('MX');
    }
    @isTest public static void registration_Closed_Lost_Bad_Data_MX() {
        registration_Closed_Lost_Bad_Data('MX');
    }
    @isTest public static void registration_Closed_Lost_No_Response_MX() {
        registration_Closed_Lost_No_Response('MX');
    }
    @isTest public static void registration_Closed_Lost_Declined_MX() {
        registration_Closed_Lost_Declined('MX');
    }
    @isTest public static void registration_Closed_Lost_Not_Working_For_Client_MX() {
        registration_Closed_Lost_Not_Working_For_Client('MX');
    }
    @isTest public static void registration_Closed_Lost_Escalate_To_Client_MX() {
        registration_Closed_Lost_Escalate_To_Client('MX');
    }
    @isTest public static void registration_Commit_MX() {
        registration_Commit('MX');
    }
    @isTest public static void reactivation_Prospect_MX() {
        reactivation_Prospect('MX');
    }
    @isTest public static void reactivation_In_Progress_MX() {
        reactivation_In_Progress('MX');
    }
    @isTest public static void reactivation_Closed_Lost_Bad_Data_MX() {
        reactivation_Closed_Lost_Bad_Data('MX');
    }
    @isTest public static void reactivation_Closed_Lost_No_Response_MX() {
        reactivation_Closed_Lost_No_Response('MX');
    }
    @isTest public static void reactivation_Closed_Lost_Declined_MX() {
        reactivation_Closed_Lost_Declined('MX');
    }
    @isTest public static void reactivation_Closed_Lost_Not_Working_For_Client_MX() {
        reactivation_Closed_Lost_Not_Working_For_Client('MX');
    }
    @isTest public static void reactivation_Closed_Lost_Escalate_To_Client_MX() {
        reactivation_Closed_Lost_Escalate_To_Client('MX');
    }
    @isTest public static void reactivation_Commit_MX() {
        reactivation_Commit('MX');
    }

    // Portuguese --------------------------
    @isTest public static void registration_Prospect_BR() {
        registration_prospect('BR');
    }
    @isTest public static void registration_Prospect_Call2_BR() {
        registration_Prospect_Call2('BR');
    }
    @isTest public static void registration_In_Progress_BR() {
        registration_In_Progress('BR');
    }
    @isTest public static void registration_Closed_Lost_Bad_Data_BR() {
        registration_Closed_Lost_Bad_Data('BR');
    }
    @isTest public static void registration_Closed_Lost_No_Response_BR() {
        registration_Closed_Lost_No_Response('BR');
    }
    @isTest public static void registration_Closed_Lost_Declined_BR() {
        registration_Closed_Lost_Declined('BR');
    }
    @isTest public static void registration_Closed_Lost_Not_Working_For_Client_BR() {
        registration_Closed_Lost_Not_Working_For_Client('BR');
    }
    @isTest public static void registration_Closed_Lost_Escalate_To_Client_BR() {
        registration_Closed_Lost_Escalate_To_Client('BR');
    }
    @isTest public static void registration_Commit_BR() {
        registration_Commit('BR');
    }
    @isTest public static void reactivation_Prospect_BR() {
        reactivation_Prospect('BR');
    }
    @isTest public static void reactivation_In_Progress_BR() {
        reactivation_In_Progress('BR');
    }
    @isTest public static void reactivation_Closed_Lost_Bad_Data_BR() {
        reactivation_Closed_Lost_Bad_Data('BR');
    }
    @isTest public static void reactivation_Closed_Lost_No_Response_BR() {
        reactivation_Closed_Lost_No_Response('BR');
    }
    @isTest public static void reactivation_Closed_Lost_Declined_BR() {
        reactivation_Closed_Lost_Declined('BR');
    }
    @isTest public static void reactivation_Closed_Lost_Not_Working_For_Client_BR() {
        reactivation_Closed_Lost_Not_Working_For_Client('BR');
    }
    @isTest public static void reactivation_Closed_Lost_Escalate_To_Client_BR() {
        reactivation_Closed_Lost_Escalate_To_Client('BR');
    }
    @isTest public static void reactivation_Commit_BR() {
        reactivation_Commit('BR');
    }

    // German ------------------------------
    @isTest public static void registration_Prospect_DE() {
        registration_prospect('DE');
    }
    @isTest public static void registration_Prospect_Call2_DE() {
        registration_Prospect_Call2('DE');
    }
    @isTest public static void registration_In_Progress_DE() {
        registration_In_Progress('DE');
    }
    @isTest public static void registration_Closed_Lost_Bad_Data_DE() {
        registration_Closed_Lost_Bad_Data('DE');
    }
    @isTest public static void registration_Closed_Lost_No_Response_DE() {
        registration_Closed_Lost_No_Response('DE');
    }
    @isTest public static void registration_Closed_Lost_Declined_DE() {
        registration_Closed_Lost_Declined('DE');
    }
    @isTest public static void registration_Closed_Lost_Not_Working_For_Client_DE() {
        registration_Closed_Lost_Not_Working_For_Client('DE');
    }
    @isTest public static void registration_Closed_Lost_Escalate_To_Client_DE() {
        registration_Closed_Lost_Escalate_To_Client('DE');
    }
    @isTest public static void registration_Commit_DE() {
        registration_Commit('DE');
    }
    @isTest public static void reactivation_Prospect_DE() {
        reactivation_Prospect('DE');
    }
    @isTest public static void reactivation_In_Progress_DE() {
        reactivation_In_Progress('DE');
    }
    @isTest public static void reactivation_Closed_Lost_Bad_Data_DE() {
        reactivation_Closed_Lost_Bad_Data('DE');
    }
    @isTest public static void reactivation_Closed_Lost_No_Response_DE() {
        reactivation_Closed_Lost_No_Response('DE');
    }
    @isTest public static void reactivation_Closed_Lost_Declined_DE() {
        reactivation_Closed_Lost_Declined('DE');
    }
    @isTest public static void reactivation_Closed_Lost_Not_Working_For_Client_DE() {
        reactivation_Closed_Lost_Not_Working_For_Client('DE');
    }
    @isTest public static void reactivation_Closed_Lost_Escalate_To_Client_DE() {
        reactivation_Closed_Lost_Escalate_To_Client('DE');
    }
    @isTest public static void reactivation_Commit_DE() {
        reactivation_Commit('DE');
    }

    // Dutch -------------------------------
    @isTest public static void registration_Prospect_NL() {
        registration_prospect('NL');
    }
    @isTest public static void registration_Prospect_Call2_NL() {
        registration_Prospect_Call2('NL');
    }
    @isTest public static void registration_In_Progress_NL() {
        registration_In_Progress('NL');
    }
    @isTest public static void registration_Closed_Lost_Bad_Data_NL() {
        registration_Closed_Lost_Bad_Data('NL');
    }
    @isTest public static void registration_Closed_Lost_No_Response_NL() {
        registration_Closed_Lost_No_Response('NL');
    }
    @isTest public static void registration_Closed_Lost_Declined_NL() {
        registration_Closed_Lost_Declined('NL');
    }
    @isTest public static void registration_Closed_Lost_Not_Working_For_Client_NL() {
        registration_Closed_Lost_Not_Working_For_Client('NL');
    }
    @isTest public static void registration_Closed_Lost_Escalate_To_Client_NL() {
        registration_Closed_Lost_Escalate_To_Client('NL');
    }
    @isTest public static void registration_Commit_NL() {
        registration_Commit('NL');
    }
    @isTest public static void reactivation_Prospect_NL() {
        reactivation_Prospect('NL');
    }
    @isTest public static void reactivation_In_Progress_NL() {
        reactivation_In_Progress('NL');
    }
    @isTest public static void reactivation_Closed_Lost_Bad_Data_NL() {
        reactivation_Closed_Lost_Bad_Data('NL');
    }
    @isTest public static void reactivation_Closed_Lost_No_Response_NL() {
        reactivation_Closed_Lost_No_Response('NL');
    }
    @isTest public static void reactivation_Closed_Lost_Declined_NL() {
        reactivation_Closed_Lost_Declined('NL');
    }
    @isTest public static void reactivation_Closed_Lost_Not_Working_For_Client_NL() {
        reactivation_Closed_Lost_Not_Working_For_Client('NL');
    }
    @isTest public static void reactivation_Closed_Lost_Escalate_To_Client_NL() {
        reactivation_Closed_Lost_Escalate_To_Client('NL');
    }
    @isTest public static void reactivation_Commit_NL() {
        reactivation_Commit('NL');
    }
    //-----------------------------------------------------------------------------------

    public static void registration_Prospect(String country) {
        //Create account record to be used for Testing
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        System.debug('****accountRecord = ' + accountRecord);
        
        //Create Registration opportunity record for Testing
        Opportunity OppRegRecordInserted_1 = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1', 'Registration', 'Prospect', NULL);
        Opportunity OppRegRecordInserted_2 = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1', 'Registration', 'Prospect', NULL);
        
        //Create contact records for Testing, these will test two different emails
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        System.debug('****ContactRecord1 = ' + ContactRecord1);
        System.debug('****ContactRecord2 = ' + ContactRecord2);
        
        //Create the contactrole for the contact on the opportunity
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRegRecordInserted_1.Id);
        OpportunityContactRole contactRole_2 = QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRegRecordInserted_2.Id);
        
        //Create task records for Testing: Need to have a task record for each possible task scenarios
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRegRecordInserted_1.Id);
        Task TaskInsert_2 = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRegRecordInserted_2.Id);
        
        OppRegRecordInserted_1.Calls_Made__c = 1;
        if(OppRegRecordInserted_1.Calls_Made__c == 1) {
            if(OppRegRecordInserted_1.get('Id') == null)insert TaskInsert; {
                System.debug('*****TaskInsert ***** = ' + TaskInsert);
                System.assert(OppRegRecordInserted_1.Calls_Made__c == 1);
                System.assert(OppRegRecordInserted_1.Primary_Contact__c == accountRecord.Primary_Contact__c);
                //System.assert(OppRegRecordInserted_1.TaskInsert.type == 'call');
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppRegRecordInserted_2.Calls_Made__c = 2;
        if(OppRegRecordInserted_2.Calls_Made__c == 2) {
            if(OppRegRecordInserted_2.get('Id') == null)insert TaskInsert_2;{
                System.assert(OppRegRecordInserted_2.Calls_Made__c == 2);
                System.assert(OppRegRecordInserted_2.Primary_Contact__c == accountRecord.Primary_Contact__c);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppRegRecordInserted_1.Calls_Made__c = 3;
        if(OppRegRecordInserted_1.Calls_Made__c == 3){
            if(OppRegRecordInserted_1.get('Id') == null)insert TaskInsert;{
                System.assert(OppRegRecordInserted_1.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppRegRecordInserted_1.Calls_Made__c = 4;
        if(OppRegRecordInserted_1.Calls_Made__c == 4){
            if(OppRegRecordInserted_1.get('Id') == null)insert TaskInsert;{
                System.assert(OppRegRecordInserted_1.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppRegRecordInserted_1.Calls_Made__c = 5;
        if(OppRegRecordInserted_1.Calls_Made__c == 5){
            if(OppRegRecordInserted_1.get('Id') == null)insert TaskInsert;{
                System.assert(OppRegRecordInserted_1.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }

        // delete accountRecord;
        // delete OppRegRecordInserted_1;
        // delete OppRegRecordInserted_2;
        // delete ContactRecord1;
        // delete ContactRecord2;
        // delete contactRole;
        // delete contactRole_2;
        // delete TaskInsert;
        // delete TaskInsert_2;
    }

    public static void registration_Prospect_Call2(String country) {
        //Create account record to be used for Testing
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppRegRecordInserted_2 = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1', 'Registration', 'Prospect', NULL);
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole_2 = QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRegRecordInserted_2.Id);
        Task TaskInsert_2 = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRegRecordInserted_2.Id);
        
        OppRegRecordInserted_2.Calls_Made__c = 2;
        if(OppRegRecordInserted_2.Calls_Made__c == 2) {
            if(OppRegRecordInserted_2.get('Id') == null)insert TaskInsert_2;{
                System.assert(OppRegRecordInserted_2.Calls_Made__c == 2);
                System.assert(OppRegRecordInserted_2.Primary_Contact__c == accountRecord.Primary_Contact__c);
                System.debug('*****PASSED ASSERT_2');
            }
        }

        // delete accountRecord;
        // delete OppRegRecordInserted_2;
        // delete ContactRecord1;
        // delete ContactRecord2;
        // delete contactRole_2;
        // delete TaskInsert_2;
    }

    public static void registration_In_Progress(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppRegRecordInserted_2 = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Registration', 'In Progress', NULL);
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRegRecordInserted_2.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRegRecordInserted_2.Id);
        
        OppRegRecordInserted_2.Calls_Made__c = 1;
        if(OppRegRecordInserted_2.Calls_Made__c == 1){
            if(OppRegRecordInserted_2.get('Id') == null)insert TaskInsert; {
                System.assert(OppRegRecordInserted_2.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppRegRecordInserted_2.Calls_Made__c = 2;
        if(OppRegRecordInserted_2.Calls_Made__c == 2){
            if(OppRegRecordInserted_2.get('Id') == null)insert TaskInsert;{
                System.assert(OppRegRecordInserted_2.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppRegRecordInserted_2.Calls_Made__c = 3;
        if(OppRegRecordInserted_2.Calls_Made__c == 3){
            if(OppRegRecordInserted_2.get('Id') == null)insert TaskInsert;{
                System.assert(OppRegRecordInserted_2.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppRegRecordInserted_2.Calls_Made__c = 4;
        if(OppRegRecordInserted_2.Calls_Made__c == 4){
            if(OppRegRecordInserted_2.get('Id') == null)insert TaskInsert;{
                System.assert(OppRegRecordInserted_2.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppRegRecordInserted_2.Calls_Made__c = 5;
        if(OppRegRecordInserted_2.Calls_Made__c == 5){
            if(OppRegRecordInserted_2.get('Id') == null)insert TaskInsert;{
                System.assert(OppRegRecordInserted_2.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void registration_Closed_Lost_Bad_Data(String country) {
        
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppReacRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Registration', 'Closed Lost', 'Bad Data');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppReacRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppReacRecordInserted.Id);
        
        OppReacRecordInserted.Calls_Made__c = 1;
        if(OppReacRecordInserted.Calls_Made__c == 1){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppReacRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 2;
        if(OppReacRecordInserted.Calls_Made__c == 2){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 3;
        if(OppReacRecordInserted.Calls_Made__c == 3){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 4;
        if(OppReacRecordInserted.Calls_Made__c == 4){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 5;
        if(OppReacRecordInserted.Calls_Made__c == 5){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void registration_Closed_Lost_No_Response(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Registration', 'Closed Lost', 'No Response');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRecordInserted.Id);
        
        OppRecordInserted.Calls_Made__c = 1;
        if(OppRecordInserted.Calls_Made__c == 1){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppRecordInserted.Calls_Made__c = 2;
        if(OppRecordInserted.Calls_Made__c == 2){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppRecordInserted.Calls_Made__c = 3;
        if(OppRecordInserted.Calls_Made__c == 3){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppRecordInserted.Calls_Made__c = 4;
        if(OppRecordInserted.Calls_Made__c == 4){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppRecordInserted.Calls_Made__c = 5;
        if(OppRecordInserted.Calls_Made__c == 5){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void registration_Closed_Lost_Declined(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Registration', 'Closed Lost', 'Declined');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRecordInserted.Id);
        
        OppRecordInserted.Calls_Made__c = 1;
        if(OppRecordInserted.Calls_Made__c == 1){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppRecordInserted.Calls_Made__c = 2;
        if(OppRecordInserted.Calls_Made__c == 2){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppRecordInserted.Calls_Made__c = 3;
        if(OppRecordInserted.Calls_Made__c == 3){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppRecordInserted.Calls_Made__c = 4;
        if(OppRecordInserted.Calls_Made__c == 4){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppRecordInserted.Calls_Made__c = 5;
        if(OppRecordInserted.Calls_Made__c == 5){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void registration_Closed_Lost_Not_Working_For_Client(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Registration', 'Closed Lost', 'Not Working For Client');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRecordInserted.Id);
        
        OppRecordInserted.Calls_Made__c = 1;
        if(OppRecordInserted.Calls_Made__c == 1){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppRecordInserted.Calls_Made__c = 2;
        if(OppRecordInserted.Calls_Made__c == 2){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppRecordInserted.Calls_Made__c = 3;
        if(OppRecordInserted.Calls_Made__c == 3){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppRecordInserted.Calls_Made__c = 4;
        if(OppRecordInserted.Calls_Made__c == 4){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppRecordInserted.Calls_Made__c = 5;
        if(OppRecordInserted.Calls_Made__c == 5){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void registration_Closed_Lost_Escalate_To_Client(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Registration', 'Closed Lost', 'Escalate To Client');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRecordInserted.Id);
        
        OppRecordInserted.Calls_Made__c = 1;
        if(OppRecordInserted.Calls_Made__c == 1){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppRecordInserted.Calls_Made__c = 2;
        if(OppRecordInserted.Calls_Made__c == 2){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppRecordInserted.Calls_Made__c = 3;
        if(OppRecordInserted.Calls_Made__c == 3){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppRecordInserted.Calls_Made__c = 4;
        if(OppRecordInserted.Calls_Made__c == 4){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppRecordInserted.Calls_Made__c = 5;
        if(OppRecordInserted.Calls_Made__c == 5){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void registration_Commit(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Registration', 'Commit', NULL);
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRecordInserted.Id);
        
        OppRecordInserted.Calls_Made__c = 1;
        if(OppRecordInserted.Calls_Made__c == 1)
            if(OppRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        OppRecordInserted.Calls_Made__c = 2;
        if(OppRecordInserted.Calls_Made__c == 2)
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        OppRecordInserted.Calls_Made__c = 3;
        if(OppRecordInserted.Calls_Made__c == 3)
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        OppRecordInserted.Calls_Made__c = 4;
        if(OppRecordInserted.Calls_Made__c == 4)
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        OppRecordInserted.Calls_Made__c = 5;
        if(OppRecordInserted.Calls_Made__c == 5)
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
    }

    public static void reactivation_Prospect(String country) {
        
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppReacRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Reactivation', 'Prospect', NULL);
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppReacRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppReacRecordInserted.Id);
        
        OppReacRecordInserted.Calls_Made__c = 1;
        if(OppReacRecordInserted.Calls_Made__c == 1){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppReacRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 2;
        if(OppReacRecordInserted.Calls_Made__c == 2){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 3;
        if(OppReacRecordInserted.Calls_Made__c == 3){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 4;
        if(OppReacRecordInserted.Calls_Made__c == 4){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 5;
        if(OppReacRecordInserted.Calls_Made__c == 5){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }
    
    public static void reactivation_In_Progress(String country) {
        
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppReacRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Reactivation', 'In Progress', NULL);
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppReacRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppReacRecordInserted.Id);
        
        OppReacRecordInserted.Calls_Made__c = 1;
        if(OppReacRecordInserted.Calls_Made__c == 1){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppReacRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 2;
        if(OppReacRecordInserted.Calls_Made__c == 2){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 3;
        if(OppReacRecordInserted.Calls_Made__c == 3){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 4;
        if(OppReacRecordInserted.Calls_Made__c == 4){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 5;
        if(OppReacRecordInserted.Calls_Made__c == 5){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void reactivation_Closed_Lost_Bad_Data(String country) {
        
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppReacRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Reactivation', 'Closed Lost', 'Bad Data');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppReacRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppReacRecordInserted.Id);
        
        OppReacRecordInserted.Calls_Made__c = 1;
        if(OppReacRecordInserted.Calls_Made__c == 1){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppReacRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 2;
        if(OppReacRecordInserted.Calls_Made__c == 2){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 3;
        if(OppReacRecordInserted.Calls_Made__c == 3){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 4;
        if(OppReacRecordInserted.Calls_Made__c == 4){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 5;
        if(OppReacRecordInserted.Calls_Made__c == 5){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void reactivation_Closed_Lost_No_Response(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppReacRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Reactivation', 'Closed Lost', 'No Response');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppReacRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppReacRecordInserted.Id);
        
        OppReacRecordInserted.Calls_Made__c = 1;
        if(OppReacRecordInserted.Calls_Made__c == 1){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppReacRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 2;
        if(OppReacRecordInserted.Calls_Made__c == 2){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 3;
        if(OppReacRecordInserted.Calls_Made__c == 3){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 4;
        if(OppReacRecordInserted.Calls_Made__c == 4){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 5;
        if(OppReacRecordInserted.Calls_Made__c == 5){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void reactivation_Closed_Lost_Declined(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppReacRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Reactivation', 'Closed Lost', 'Declined');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppReacRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppReacRecordInserted.Id);
        
        OppReacRecordInserted.Calls_Made__c = 1;
        if(OppReacRecordInserted.Calls_Made__c == 1){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppReacRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 2;
        if(OppReacRecordInserted.Calls_Made__c == 2){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 3;
        if(OppReacRecordInserted.Calls_Made__c == 3){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 4;
        if(OppReacRecordInserted.Calls_Made__c == 4){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 5;
        if(OppReacRecordInserted.Calls_Made__c == 5){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void reactivation_Closed_Lost_Not_Working_For_Client(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppReacRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Reactivation', 'Closed Lost', 'Not Working For Client');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.id, OppReacRecordInserted.id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppReacRecordInserted.id);
        
        OppReacRecordInserted.Calls_Made__c = 1;
        if(OppReacRecordInserted.Calls_Made__c == 1){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppReacRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 2;
        if(OppReacRecordInserted.Calls_Made__c == 2){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 3;
        if(OppReacRecordInserted.Calls_Made__c == 3){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 4;
        if(OppReacRecordInserted.Calls_Made__c == 4){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 5;
        if(OppReacRecordInserted.Calls_Made__c == 5){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void reactivation_Closed_Lost_Escalate_To_Client(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppReacRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Reactivation', 'Closed Lost', 'Escalate To Client');
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppReacRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppReacRecordInserted.Id);
        
        OppReacRecordInserted.Calls_Made__c = 1;
        if(OppReacRecordInserted.Calls_Made__c == 1){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppReacRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 2;
        if(OppReacRecordInserted.Calls_Made__c == 2){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 3;
        if(OppReacRecordInserted.Calls_Made__c == 3){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 4;
        if(OppReacRecordInserted.Calls_Made__c == 4){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppReacRecordInserted.Calls_Made__c = 5;
        if(OppReacRecordInserted.Calls_Made__c == 5){
            if(OppReacRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppReacRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }

    public static void reactivation_Commit(String country) {
        Account accountRecord = QB_TestDataFactory.createAndInsertGenericAccountRecord_Unique(count, TRUE, country);
        count++;
        Opportunity OppRecordInserted = QB_TestDataFactory.createAndInsertOpportunityRecord(TRUE, accountRecord.Id, 'Test Opp_1_1', 'Reactivation', 'Commit', NULL);
        Contact ContactRecord1 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'test@avetta.com');
        Contact ContactRecord2 = QB_TestDataFactory.createAndInsertContactRecord(TRUE, accountRecord.Id, 'jason.mcgrew@avetta.com');
        OpportunityContactRole contactRole =  QB_TestDataFactory.createAndInsertOpportunityContactRole(TRUE, ContactRecord1.Id, OppRecordInserted.Id);
        Task TaskInsert = QB_TestDataFactory.createAndInsertTaskRecord(TRUE, 'call', 'call', OppRecordInserted.Id);
        
        OppRecordInserted.Calls_Made__c = 1;
        if(OppRecordInserted.Calls_Made__c == 1){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert; {
                System.assert(OppRecordInserted.Calls_Made__c == 1);
                System.debug('*****PASSED ASSERT_1');
            }
        }
        OppRecordInserted.Calls_Made__c = 2;
        if(OppRecordInserted.Calls_Made__c == 2) {
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 2);
                System.debug('*****PASSED ASSERT_2');
            }
        }
        OppRecordInserted.Calls_Made__c = 3;
        if(OppRecordInserted.Calls_Made__c == 3) {
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 3);
                System.debug('*****PASSED ASSERT_3');
            }
        }
        OppRecordInserted.Calls_Made__c = 4;
        if(OppRecordInserted.Calls_Made__c == 4) {
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 4);
                System.debug('*****PASSED ASSERT_4');
            }
        }
        OppRecordInserted.Calls_Made__c = 5;
        if(OppRecordInserted.Calls_Made__c == 5){
            if(OppRecordInserted.get('Id') == null)insert TaskInsert;{
                System.assert(OppRecordInserted.Calls_Made__c == 5);
                System.debug('*****PASSED ASSERT_5');
            }
        }
    }   
}